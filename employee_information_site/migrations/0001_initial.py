# Generated by Django 3.2 on 2021-06-18 10:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CandidateProspectivePosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Perspective position')),
            ],
            options={
                'verbose_name': 'должность',
                'verbose_name_plural': 'Вакантные должности',
            },
        ),
        migrations.CreateModel(
            name='CompanyDepartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='Имя')),
                ('second_name', models.CharField(max_length=50, verbose_name='Фамилия')),
                ('patronymic', models.CharField(blank=True, max_length=50, verbose_name='Отчество')),
                ('photo', models.ImageField(default='skb_lab.jpg', upload_to='employee_photos', verbose_name='Фотография')),
                ('email', models.EmailField(max_length=254, verbose_name='E-mail')),
                ('phone_number', models.CharField(max_length=12, verbose_name='Номер телефона')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_new_employee', models.BooleanField(verbose_name='Я новый сотрудник')),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='employee_information_site.companydepartment', verbose_name='Отдел')),
            ],
            options={
                'ordering': ['department', 'position', 'first_name', 'second_name', 'patronymic'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeServices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_information_site.employee')),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_information_site.service')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeePosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_information_site.companydepartment')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='employee',
            name='position',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='employee_information_site.employeeposition', verbose_name='Должность'),
        ),
        migrations.AddField(
            model_name='employee',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='Имя')),
                ('second_name', models.CharField(max_length=50, verbose_name='Фамилия')),
                ('patronymic', models.CharField(blank=True, max_length=50, verbose_name='Отчество')),
                ('photo', models.ImageField(default='skb_lab.jpg', upload_to='employee_photos', verbose_name='Фотография')),
                ('email', models.EmailField(max_length=254, verbose_name='E-mail')),
                ('phone_number', models.CharField(max_length=12, verbose_name='Номер телефона')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('personal_qualities', models.TextField(blank=True, verbose_name='Личные качества')),
                ('professional_skill', models.TextField(blank=True, verbose_name='Профессиональные навыки')),
                ('professional_achievements', models.TextField(blank=True, verbose_name='Профессиональные достижения')),
                ('position', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='employee_information_site.candidateprospectiveposition', verbose_name='Предполагаемая должность')),
            ],
            options={
                'verbose_name': 'кандидата',
                'verbose_name_plural': 'Кандидат',
                'ordering': ['created_at', 'position', 'first_name', 'second_name', 'patronymic'],
            },
        ),
    ]
